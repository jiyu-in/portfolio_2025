{"ast":null,"code":"var _jsxFileName = \"/Users/jiyu/Desktop/app/portfolio_2025/app/src/page/Project.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ProjectList from \"./ProjectList\";\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport { Keyboard, Navigation, Pagination } from 'swiper/modules';\nimport { motion, useScroll, useTransform } from \"framer-motion\";\nimport ArrowRight from '../assets/images/ArrowRightIcon.svg';\nimport ArrowLeft from '../assets/images/ArrowLeftIcon.svg';\nimport data from '../data/data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled.div`\n    position: relative;\n    width: 100%;\n    margin-top: 40px;\n    & .swiper{\n        width: calc(100vw - 48px);\n        height: 640px;\n        @media (max-width: 640px) {\n            height: 480px;\n        }\n    }\n    & .swiper-wrapper{\n        align-items: center;\n    }\n    & .swiper-button-prev, .swiper-button-next{\n        background-repeat: no-repeat;\n        background-position: center center;\n        width: 48px;\n        height: 48px;\n        transform: rotate(90deg);\n        @media (max-width: 640px) {\n            display: none;\n        }\n    }\n    & .swiper-button-prev{\n        background-image: url(${ArrowLeft});\n    }\n    & .swiper-button-next{\n        background-image: url(${ArrowRight});\n    } \n    & .swiper-button-prev:after, .swiper-button-next:after{\n        font-size: 0;\n        display: none;\n    }\n    & .swiper-slide{\n        width: calc(100% - 184px);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        backdrop-filter: blur(21px);\n        background-color: #ffffff14;\n        border: 1px solid #000000;\n        border-width: 1px 0;\n        @media (max-width: 640px) {\n            width: 100%;\n        }\n    }\n`;\n_c = Root;\nfunction Project() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    setProjects(data);\n  }, []);\n  const ref = useRef(null);\n  const {\n    scrollYProgress\n  } = useScroll({\n    target: ref,\n    offset: [\"start 70%\", \"start 30%\"]\n  });\n  const opacity = useTransform(scrollYProgress, [0, 0.5, 1], [0, 1, 1]);\n  const x = useTransform(scrollYProgress, [0, 0.5, 1], [30, 15, 1]);\n  return /*#__PURE__*/_jsxDEV(Root, {\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      direction: 'vertical',\n      slidesPerView: 2,\n      breakpoints: {\n        640: {\n          slidesPerView: 2\n        },\n        768: {\n          slidesPerView: 3\n        },\n        1024: {\n          slidesPerView: 4\n        }\n      },\n      spaceBetween: 0,\n      keyboard: {\n        enabled: true\n      },\n      pagination: {\n        clickable: true\n      },\n      navigation: true,\n      modules: [Keyboard, Navigation],\n      className: \"mySwiper\",\n      parallax: true,\n      ref: ref,\n      children: projects.map((item, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(ProjectList, {\n          title: item.title,\n          date: item.date,\n          skills: item.skills,\n          des: item.des,\n          category: item.category,\n          img: item.img,\n          url: item.url,\n          opacity: opacity,\n          translateX: x\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(Project, \"aGGsFtTai84svLM/bpisfoiwt7o=\", false, function () {\n  return [useScroll, useTransform, useTransform];\n});\n_c2 = Project;\nexport default Project;\nvar _c, _c2;\n$RefreshReg$(_c, \"Root\");\n$RefreshReg$(_c2, \"Project\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styled","ProjectList","Swiper","SwiperSlide","Keyboard","Navigation","Pagination","motion","useScroll","useTransform","ArrowRight","ArrowLeft","data","jsxDEV","_jsxDEV","Root","div","_c","Project","_s","projects","setProjects","ref","scrollYProgress","target","offset","opacity","x","children","direction","slidesPerView","breakpoints","spaceBetween","keyboard","enabled","pagination","clickable","navigation","modules","className","parallax","map","item","index","title","date","skills","des","category","img","url","translateX","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/jiyu/Desktop/app/portfolio_2025/app/src/page/Project.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ProjectList from \"./ProjectList\";\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport { Keyboard, Navigation, Pagination } from 'swiper/modules';\nimport { motion, useScroll, useTransform } from \"framer-motion\";\nimport ArrowRight from '../assets/images/ArrowRightIcon.svg';\nimport ArrowLeft from '../assets/images/ArrowLeftIcon.svg';\nimport data from '../data/data.json'; \n\n\nconst Root = styled.div`\n    position: relative;\n    width: 100%;\n    margin-top: 40px;\n    & .swiper{\n        width: calc(100vw - 48px);\n        height: 640px;\n        @media (max-width: 640px) {\n            height: 480px;\n        }\n    }\n    & .swiper-wrapper{\n        align-items: center;\n    }\n    & .swiper-button-prev, .swiper-button-next{\n        background-repeat: no-repeat;\n        background-position: center center;\n        width: 48px;\n        height: 48px;\n        transform: rotate(90deg);\n        @media (max-width: 640px) {\n            display: none;\n        }\n    }\n    & .swiper-button-prev{\n        background-image: url(${ArrowLeft});\n    }\n    & .swiper-button-next{\n        background-image: url(${ArrowRight});\n    } \n    & .swiper-button-prev:after, .swiper-button-next:after{\n        font-size: 0;\n        display: none;\n    }\n    & .swiper-slide{\n        width: calc(100% - 184px);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        backdrop-filter: blur(21px);\n        background-color: #ffffff14;\n        border: 1px solid #000000;\n        border-width: 1px 0;\n        @media (max-width: 640px) {\n            width: 100%;\n        }\n    }\n`;\n\n\nfunction Project() {\n\n    const [projects, setProjects] = useState([]);\n    useEffect(() => {\n        setProjects(data); \n    }, []);\n\n    const ref = useRef(null);\n    const { scrollYProgress } = useScroll({\n        target: ref,\n        offset: [\"start 70%\", \"start 30%\"], \n        }); \n    const opacity = useTransform(scrollYProgress, [0, 0.5, 1], [0, 1, 1]);\n    const x = useTransform(scrollYProgress, [0, 0.5, 1], [30, 15, 1]);\n\n    return (\n        <Root>\n            <Swiper\n                direction={'vertical'}\n                slidesPerView={2}\n                breakpoints={{\n                    640: {\n                        slidesPerView: 2,\n                    },\n                    768: {\n                        slidesPerView: 3,\n                    },\n                    1024: {\n                        slidesPerView: 4,\n                    },\n                }}\n                spaceBetween={0}\n                keyboard={{\n                    enabled: true,\n                }}\n                pagination={{\n                    clickable: true,\n                }}\n                navigation={true}\n                modules={[Keyboard, Navigation]}\n                className=\"mySwiper\"\n                parallax={true}\n                ref={ref}\n            >\n                {projects.map(( item , index) => (\n                    <SwiperSlide key={index} \n                    >\n                        <ProjectList \n                            title={item.title}\n                            date={item.date}\n                            skills={item.skills}\n                            des={item.des}\n                            category={item.category}\n                            img={item.img}\n                            url={item.url}\n                            opacity={opacity}\n                            translateX={x}\n                            />\n                    </SwiperSlide>\n                    ))}\n            </Swiper>\n        </Root>\n    );\n}\n\nexport default Project;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}