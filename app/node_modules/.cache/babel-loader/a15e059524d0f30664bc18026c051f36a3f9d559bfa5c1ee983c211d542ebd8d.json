{"ast":null,"code":"var _jsxFileName = \"/Users/jiyu/Desktop/app/portfolio_2025/app/src/components/SplashScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Screen = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: #333;\n  overflow: hidden;\n  \n`;\n_c = Screen;\nconst Slogan = styled.div`\n  font-family: \"Iropke Batang\",serif;\n  font-size: 2.5rem;\n  font-weight: 100;\n  color: #ffffffde;\n  white-space: nowrap;\n  padding-bottom:16px;\n`;\n_c2 = Slogan;\nconst ProgressBarContainer = styled.div`\n  width: 100%;\n  height: 3px;\n  background-color: #333;\n  overflow: hidden;\n`;\n_c3 = ProgressBarContainer;\nconst ProgressBar = styled.div`\n  height: 100%;\n  background: #c8fe26;\n  /* background: linear-gradient(90deg, rgba(200,254,38,1) 0%, rgba(39,146,192,1) 100%); */\n  width: ${props => props.width}%;\n  transition: width 0.2s ease-in-out;\n`;\n_c4 = ProgressBar;\nconst SplashScreen = ({\n  onFinish = () => {}\n}) => {\n  _s();\n  const sloganText = \"한 픽셀의 차이가 사용자 경험을 바꾼다\";\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const intervalRef = useRef(null);\n  const effectStarted = useRef(false);\n  useEffect(() => {\n    if (effectStarted.current) return;\n    effectStarted.current = true;\n    intervalRef.current = setInterval(() => {\n      setDisplayedText(prev => {\n        if (prev.length < sloganText.length) {\n          const newText = sloganText.slice(0, prev.length + 1);\n          const newProgress = (newText.length / sloganText.length * 100).toFixed(0);\n          setProgress(Number(newProgress));\n          return newText;\n        } else {\n          clearInterval(intervalRef.current);\n          setTimeout(() => onFinish(), 1000);\n          return prev;\n        }\n      });\n    }, 200);\n    return () => clearInterval(intervalRef.current);\n  }, [onFinish, sloganText]);\n  return /*#__PURE__*/_jsxDEV(Screen, {\n    children: [/*#__PURE__*/_jsxDEV(Slogan, {\n      children: displayedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBarContainer, {\n      children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n        width: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(SplashScreen, \"qjHax1IWn/1Io8FMwqAOHb5OjqU=\");\n_c5 = SplashScreen;\nexport default SplashScreen;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Screen\");\n$RefreshReg$(_c2, \"Slogan\");\n$RefreshReg$(_c3, \"ProgressBarContainer\");\n$RefreshReg$(_c4, \"ProgressBar\");\n$RefreshReg$(_c5, \"SplashScreen\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styled","jsxDEV","_jsxDEV","Screen","div","_c","Slogan","_c2","ProgressBarContainer","_c3","ProgressBar","props","width","_c4","SplashScreen","onFinish","_s","sloganText","displayedText","setDisplayedText","progress","setProgress","intervalRef","effectStarted","current","setInterval","prev","length","newText","slice","newProgress","toFixed","Number","clearInterval","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/Users/jiyu/Desktop/app/portfolio_2025/app/src/components/SplashScreen.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst Screen = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: #333;\n  overflow: hidden;\n  \n`;\n\nconst Slogan = styled.div`\n  font-family: \"Iropke Batang\",serif;\n  font-size: 2.5rem;\n  font-weight: 100;\n  color: #ffffffde;\n  white-space: nowrap;\n  padding-bottom:16px;\n`;\n\nconst ProgressBarContainer = styled.div`\n  width: 100%;\n  height: 3px;\n  background-color: #333;\n  overflow: hidden;\n`;\n\nconst ProgressBar = styled.div`\n  height: 100%;\n  background: #c8fe26;\n  /* background: linear-gradient(90deg, rgba(200,254,38,1) 0%, rgba(39,146,192,1) 100%); */\n  width: ${(props) => props.width}%;\n  transition: width 0.2s ease-in-out;\n`;\n\nconst SplashScreen = ({ onFinish = () => {} }) => {\n  const sloganText = \"한 픽셀의 차이가 사용자 경험을 바꾼다\";\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const intervalRef = useRef(null);\n  const effectStarted = useRef(false);\n\n  useEffect(() => {\n    if (effectStarted.current) return;\n    effectStarted.current = true;\n\n    intervalRef.current = setInterval(() => {\n      setDisplayedText((prev) => {\n        if (prev.length < sloganText.length) {\n          const newText = sloganText.slice(0, prev.length + 1);\n          const newProgress = ((newText.length / sloganText.length) * 100).toFixed(0);\n          setProgress(Number(newProgress));\n          return newText;\n        } else {\n          clearInterval(intervalRef.current);\n          setTimeout(() => onFinish(), 1000);\n          return prev;\n        }\n      });\n    }, 200);\n\n    return () => clearInterval(intervalRef.current);\n  }, [onFinish, sloganText]);\n\n  return (\n    <Screen>\n      <Slogan>{displayedText}</Slogan>\n      <ProgressBarContainer>\n        <ProgressBar width={progress} />\n      </ProgressBarContainer>\n    </Screen>\n  );\n};\n\nexport default SplashScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}