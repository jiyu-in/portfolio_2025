{"ast":null,"code":"var _jsxFileName = \"/Users/jiyu/Desktop/app/portfolio_2025/app/src/page/ProjectDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport data from '../data/data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled.div`\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.8);\n    padding: 20px;\n`;\n_c = Root;\nconst Contents = styled.div``;\n_c2 = Contents;\nconst BgImage = styled.img``;\n_c3 = BgImage;\nconst Wrap = styled.div``;\n_c4 = Wrap;\nconst Category = styled.div``;\n_c5 = Category;\nconst Title = styled.div``;\n_c6 = Title;\nconst DateText = styled.div``;\n_c7 = DateText;\nconst Skills = styled.div``;\n_c8 = Skills;\nconst Description = styled.div``;\n_c9 = Description;\nfunction ProjectDetail() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    setProjects(data); // JSON 데이터를 state에 저장\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Root, {\n    children: projects.map(item => /*#__PURE__*/_jsxDEV(Contents, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(BgImage, {\n        src: item.img,\n        alt: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Wrap, {\n        children: [/*#__PURE__*/_jsxDEV(Category, {\n          children: item.category.map((category, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", category]\n          }, `${category}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DateText, {\n          children: item.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Skills, {\n          children: item.skills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", \"#\", skill]\n          }, `${skill}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Description, {\n          children: item.des\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectDetail, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c10 = ProjectDetail;\nexport default ProjectDetail;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"Root\");\n$RefreshReg$(_c2, \"Contents\");\n$RefreshReg$(_c3, \"BgImage\");\n$RefreshReg$(_c4, \"Wrap\");\n$RefreshReg$(_c5, \"Category\");\n$RefreshReg$(_c6, \"Title\");\n$RefreshReg$(_c7, \"DateText\");\n$RefreshReg$(_c8, \"Skills\");\n$RefreshReg$(_c9, \"Description\");\n$RefreshReg$(_c10, \"ProjectDetail\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styled","data","jsxDEV","_jsxDEV","Root","div","_c","Contents","_c2","BgImage","img","_c3","Wrap","_c4","Category","_c5","Title","_c6","DateText","_c7","Skills","_c8","Description","_c9","ProjectDetail","_s","projects","setProjects","children","map","item","src","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","category","index","date","skills","skill","des","id","_c10","$RefreshReg$"],"sources":["/Users/jiyu/Desktop/app/portfolio_2025/app/src/page/ProjectDetail.jsx"],"sourcesContent":["\nimport React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport data from '../data/data.json'; \n\nconst Root = styled.div`\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.8);\n    padding: 20px;\n`;\nconst Contents = styled.div``; \nconst BgImage = styled.img``; \nconst Wrap = styled.div``; \nconst Category = styled.div``; \nconst Title = styled.div``; \nconst DateText = styled.div``; \nconst Skills = styled.div``; \nconst Description = styled.div``; \n\nfunction ProjectDetail(){\n    \n    const [projects, setProjects] = useState([]);\n    useEffect(() => {\n        setProjects(data); // JSON 데이터를 state에 저장\n    }, []);\n    \n    return (\n        <Root>\n    {projects.map((item) => (\n        <Contents key={item.id}> {/* item.id가 고유한 값이라면 key로 사용 */}\n            <BgImage src={item.img} alt={item.title} />\n            <Wrap>\n                <Category>\n                    {item.category.map((category, index) => (\n                        <span key={`${category}-${index}`}> {/* category와 index를 결합하여 고유한 key 생성 */}\n                            {category}\n                        </span>\n                    ))}  \n                </Category>\n                <Title>{item.title}</Title>\n                <DateText>{item.date}</DateText>\n                <Skills>\n                    {item.skills.map((skill, index) => (\n                        <span key={`${skill}-${index}`}> {/* skill과 index를 결합하여 고유한 key 생성 */}\n                            #{skill}\n                        </span>\n                    ))}\n                </Skills>\n                <Description>{item.des}</Description>\n            </Wrap>\n        </Contents>\n    ))}\n</Root>\n\n\n    );\n}\n\nexport default ProjectDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}